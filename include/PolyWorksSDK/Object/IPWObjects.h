#pragma once

////////////////////////////////////////////////////////////////////////////////////////////////////
///
///    \file     IPWObjects.h
///    \brief    IPWObjects class.
///
///    \copyright InnovMetric Logiciels Inc. Copyright ( C ) 2007 All Rights Reserved All rights reserved
///
////////////////////////////////////////////////////////////////////////////////////////////////////

// =================================================================================================
// ======================================= INCLUDED FILES ==========================================

#include <PolyWorksSDK/Object/CPWObjectIterator.h>

#include "FnIPWObjects.h"

// =================================================================================================
// ========================================= NAMESPACES ============================================

namespace IM
{

// =================================================================================================
// ==================================== FORWARD DECLARATIONS =======================================

class CPWOPredicates;

// =================================================================================================
// ====================================== CONSTANTS, ENUMS =========================================

// =================================================================================================
// ================================= TYPES, CLASSES, STRUCTURES ====================================

////////////////////////////////////////////////////////////////////////////////////////////////////
///
///    \ingroup  IM_INTERFACES
///
///    \brief    Interface class acting as an entry point to manage PolyWorks Objects.
///
////////////////////////////////////////////////////////////////////////////////////////////////////
class IPWObjects
{
public:
    // ---------------- Public Types  --------------------------------------------------------------

    // ---------------- Public Methods  ------------------------------------------------------------

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    ///
    ///    \brief    Default constructor.
    ///
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    IPWObjects() {}


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    ///
    ///    \brief    Destructor.
    ///
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual ~IPWObjects() {}


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    ///
    ///    \brief    Returns the beginning PolyWorks Object iterator on the module's collection of objects
    ///              meeting the evaluation criterion of the input predicates.  Please see FnCPWOPredicates.h
    ///              for examples of how to create CPWOPredicates objects.
    ///
    ///    \param[ in ] predicates_    Predicates to evaluate.
    ///
    ///    \return    Beginning PolyWorks Object iterator.
    ///
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual CPWObjectIterator Begin( CPWOPredicates predicates_ ) = 0;


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    ///
    ///    \brief    Returns the end iterator on the module's PolyWorks Objects collection.
    ///
    ///    \return    End iterator.
    ///
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual CPWObjectIterator End() = 0;


protected:
    // ---------------- Protected Methods ----------------------------------------------------------

    // ---------------- Protected Member Variables -------------------------------------------------

private:
    // ---------------- Private Methods ------------------------------------------------------------

    // ---------------- Private Member Variables ---------------------------------------------------

};

// =================================================================================================
// ===================================== FUNCTION PROTOTYPES =======================================

} // namespace IM
