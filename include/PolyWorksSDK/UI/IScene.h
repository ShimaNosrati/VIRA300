#pragma once

////////////////////////////////////////////////////////////////////////////////////////////////////
///
///    \file     IScene.h
///    \brief    IScene class.
///
///    \copyright InnovMetric Logiciels Inc. Copyright ( C ) 2007 All Rights Reserved All rights reserved
///
/// ************************************************************************** */

// =================================================================================================
// ======================================= INCLUDED FILES ==========================================

#include "FnIScene.h"

// =================================================================================================
// ========================================= NAMESPACES ============================================

namespace IM
{

// =================================================================================================
// ==================================== FORWARD DECLARATIONS =======================================

class IDrawNodes;

// =================================================================================================
// ====================================== CONSTANTS, ENUMS =========================================

// =================================================================================================
// ================================= TYPES, CLASSES, STRUCTURES ====================================

////////////////////////////////////////////////////////////////////////////////////////////////////
///
///    \ingroup  IM_INTERFACES
///
///    \brief    Class representing the currently used 3D Scene. With this class you can access the
///              scenes associated draw nodes management object.
///
///              You can retrieve a pointer to this class by calling IUserInterface::SceneGet.
///
////////////////////////////////////////////////////////////////////////////////////////////////////
class IScene
{
public:
    // ---------------- Public Types  --------------------------------------------------------------

    // ---------------- Public Methods  ------------------------------------------------------------

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    ///
    ///    \brief    Default constructor.
    ///
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    IScene() {}


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    ///
    ///    \brief    Destructor.
    ///
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual ~IScene() {}


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    ///
    ///    \brief    Returns the pointer to the container of IDrawNode objects.
    ///
    ///    \return    Pointer to the draw nodes objects.
    ///
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual IDrawNodes* DrawNodesGet() = 0;


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    ///
    ///    \brief    Gets the width and height of the 3D Scene in pixels.
    ///
    ///    \param[ out ] width_     The width in pixels of the scenes window.
    ///    \param[ out ] height_    The height in pixels of the scenes window.
    ///
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void SizeGet( unsigned int& width_, unsigned int& height_ ) const = 0;


protected:
    // ---------------- Protected Methods ----------------------------------------------------------

    // ---------------- Protected Member Variables -------------------------------------------------

private:
    // ---------------- Private Methods ------------------------------------------------------------

    // ---------------- Private Member Variables ---------------------------------------------------

};

// =================================================================================================
// ===================================== FUNCTION PROTOTYPES =======================================

} // namespace IM
