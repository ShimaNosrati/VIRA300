#pragma once

////////////////////////////////////////////////////////////////////////////////////////////////////
///
///    \file     IGeometry.h
///    \brief    This file contains the interface for the basis of all geometric objects.
///
///    \copyright InnovMetric Logiciels Inc. Copyright ( C ) 2007 All Rights Reserved All rights reserved
///
////////////////////////////////////////////////////////////////////////////////////////////////////

// =================================================================================================
// ======================================= INCLUDED FILES ==========================================

#include <PolyWorksSDK/Geom/CGeometryType.h>
#include "FnIGeometry.h"

// =================================================================================================
// ========================================= NAMESPACES ============================================

namespace IM
{

// =================================================================================================
// ==================================== FORWARD DECLARATIONS =======================================

// =================================================================================================
// ====================================== CONSTANTS, ENUMS =========================================

// =================================================================================================
// ================================= TYPES, CLASSES, STRUCTURES ====================================

////////////////////////////////////////////////////////////////////////////////////////////////////
///
///    \ingroup  IM_INTERFACES
///
///    \brief    The geometry interface.
///
////////////////////////////////////////////////////////////////////////////////////////////////////
class IGeometry
{
public:
    // ---------------- Public Types  --------------------------------------------------------------

    // ---------------- Public Methods  ------------------------------------------------------------

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    ///
    ///    \brief    Constructor
    ///
    ///              All geometries MUST be created using their corresponding factory method.
    ///              (Please see FnIGeometryFactory.h)
    ///
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    IGeometry() {}


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    ///
    ///    \brief    Destructor
    ///
    ///              All geometries MUST be deleted using the destroy method. (Please see
    ///              FnIGeometryFactory.h)
    ///
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual ~IGeometry() {}


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    ///
    ///    \brief    Returns the type of the geometry.
    ///
    ///    \return    The type of the geometry.
    ///
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual CGeometryType TypeGet() const = 0;


protected:
    // ---------------- Protected Methods ----------------------------------------------------------

    // ---------------- Protected Member Variables -------------------------------------------------

private:
    // ---------------- Private Methods ------------------------------------------------------------

    // ---------------- Private Member Variables ---------------------------------------------------

};


// =================================================================================================
// ===================================== FUNCTION PROTOTYPES =======================================


} // namespace IM
